spring:
  datasource:
    url: jdbc:postgresql://192.168.12.183:5432/ministries_local?currentSchema=public #jdbc:postgresql://192.168.12.183:5432/mimistries_local?currentSchema=public
    username: ministry_user
    password: ministry_pass
    driver-class-name: org.postgresql.Driver

    jpa:
      hibernate:
        ddl-auto: create #validate for production
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
      show-sql: true

  #jpa:
    #hibernate:
      #ddl-auto: create  #update create validate  #CREATE SEQUENCE member_id_seq START 1 INCREMENT 1;  ALTER ROLE member_user SET search_path TO public;
  flyway:
    enabled: true
    connect-retries: 3

  member:
    service:
      base-url: http://192.168.12.183:8086

  resilience4j:
    circuitbreaker:
      instances:
        memberServiceClient:
          slidingWindowSize: 20
          failureRateThreshold: 50
          waitDurationInOpenState: 10s


  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ministry-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"  # or your specific package like com.joseph.member_service.model

  web:
    resources:
      static-locations: file:/var/www/projects/ministry/uploads/

# Custom app-level config
app:
  kafka:
    topic: ministries
  values:
    church-shortname: EBS

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus